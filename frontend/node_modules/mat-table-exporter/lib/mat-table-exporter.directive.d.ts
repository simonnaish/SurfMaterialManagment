import { AfterViewInit, Renderer2 } from '@angular/core';
import { MatTable } from '@angular/material/table';
import { CdkTableExporter, DataExtractorService, ServiceLocatorService } from 'cdk-table-exporter';
import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class MatTableExporterDirective extends CdkTableExporter implements AfterViewInit {
    /**
     * Overriding ngAfterViewInit of TableExporter
     */
    ngAfterViewInit(): void;
    constructor(renderer: Renderer2, serviceLocator: ServiceLocatorService, dataExtractor: DataExtractorService, table: MatTable<any>);
    /**
     * MatTable implementation of getPageCount
     */
    getPageCount(): number;
    /**
     * MatTable implementation of getCurrentPageIndex
     */
    getCurrentPageIndex(): number;
    /**
     * MatTable implementation of goToPage
     */
    goToPage(index: number): void;
    /**
     * MatTable implementation of getPageChangeObservable
     */
    getPageChangeObservable(): Observable<any>;
    private getPaginator;
    private enablePaginator;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatTableExporterDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MatTableExporterDirective, "[matTableExporter]", ["matTableExporter"], {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXRhYmxlLWV4cG9ydGVyLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJtYXQtdGFibGUtZXhwb3J0ZXIuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1hdFRhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdGFibGUnO1xyXG5pbXBvcnQgeyBDZGtUYWJsZUV4cG9ydGVyLCBEYXRhRXh0cmFjdG9yU2VydmljZSwgU2VydmljZUxvY2F0b3JTZXJ2aWNlIH0gZnJvbSAnY2RrLXRhYmxlLWV4cG9ydGVyJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBNYXRUYWJsZUV4cG9ydGVyRGlyZWN0aXZlIGV4dGVuZHMgQ2RrVGFibGVFeHBvcnRlciBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG4gICAgLyoqXHJcbiAgICAgKiBPdmVycmlkaW5nIG5nQWZ0ZXJWaWV3SW5pdCBvZiBUYWJsZUV4cG9ydGVyXHJcbiAgICAgKi9cclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xyXG4gICAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMiwgc2VydmljZUxvY2F0b3I6IFNlcnZpY2VMb2NhdG9yU2VydmljZSwgZGF0YUV4dHJhY3RvcjogRGF0YUV4dHJhY3RvclNlcnZpY2UsIHRhYmxlOiBNYXRUYWJsZTxhbnk+KTtcclxuICAgIC8qKlxyXG4gICAgICogTWF0VGFibGUgaW1wbGVtZW50YXRpb24gb2YgZ2V0UGFnZUNvdW50XHJcbiAgICAgKi9cclxuICAgIGdldFBhZ2VDb3VudCgpOiBudW1iZXI7XHJcbiAgICAvKipcclxuICAgICAqIE1hdFRhYmxlIGltcGxlbWVudGF0aW9uIG9mIGdldEN1cnJlbnRQYWdlSW5kZXhcclxuICAgICAqL1xyXG4gICAgZ2V0Q3VycmVudFBhZ2VJbmRleCgpOiBudW1iZXI7XHJcbiAgICAvKipcclxuICAgICAqIE1hdFRhYmxlIGltcGxlbWVudGF0aW9uIG9mIGdvVG9QYWdlXHJcbiAgICAgKi9cclxuICAgIGdvVG9QYWdlKGluZGV4OiBudW1iZXIpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBNYXRUYWJsZSBpbXBsZW1lbnRhdGlvbiBvZiBnZXRQYWdlQ2hhbmdlT2JzZXJ2YWJsZVxyXG4gICAgICovXHJcbiAgICBnZXRQYWdlQ2hhbmdlT2JzZXJ2YWJsZSgpOiBPYnNlcnZhYmxlPGFueT47XHJcbiAgICBwcml2YXRlIGdldFBhZ2luYXRvcjtcclxuICAgIHByaXZhdGUgZW5hYmxlUGFnaW5hdG9yO1xyXG59XHJcbiJdfQ==