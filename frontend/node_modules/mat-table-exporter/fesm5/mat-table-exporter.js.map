{"version":3,"file":"mat-table-exporter.js","sources":["ng://mat-table-exporter/lib/mat-table-exporter.directive.ts","ng://mat-table-exporter/lib/mat-table-exporter.module.ts","ng://mat-table-exporter/public-api.ts","ng://mat-table-exporter/mat-table-exporter.ts"],"sourcesContent":["import { AfterViewInit, Directive, Host, Optional, Renderer2, Self } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { CdkTableExporter, DataExtractorService, ServiceLocatorService } from 'cdk-table-exporter';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[matTableExporter]', // renamed selector but kept old version for backwards compat.\r\n  exportAs: 'matTableExporter'\r\n})\r\nexport class MatTableExporterDirective extends CdkTableExporter implements AfterViewInit {\r\n  /**\r\n   * Overriding ngAfterViewInit of TableExporter\r\n   */\r\n  ngAfterViewInit(): void {\r\n    this.exportStarted.subscribe(_ => {\r\n      this.enablePaginator(false);\r\n    });\r\n    this.exportCompleted.subscribe(_ => {\r\n      this.enablePaginator(true);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    renderer: Renderer2,\r\n    serviceLocator: ServiceLocatorService,\r\n    dataExtractor: DataExtractorService,\r\n    @Host() @Self() @Optional() table: MatTable<any>\r\n  ) {\r\n    super(renderer, serviceLocator, dataExtractor, table);\r\n  }\r\n\r\n  /**\r\n   * MatTable implementation of getPageCount\r\n   */\r\n  public getPageCount(): number {\r\n    return this.getPaginator().getNumberOfPages();\r\n  }\r\n\r\n  /**\r\n   * MatTable implementation of getCurrentPageIndex\r\n   */\r\n  public getCurrentPageIndex(): number {\r\n    return this.getPaginator().pageIndex;\r\n  }\r\n\r\n  /**\r\n   * MatTable implementation of goToPage\r\n   */\r\n  public goToPage(index: number): void {\r\n    this.getPaginator().pageIndex = index;\r\n    this.getPaginator()._changePageSize(this.getPaginator().pageSize);\r\n  }\r\n\r\n  /**\r\n   * MatTable implementation of getPageChangeObservable\r\n   */\r\n  public getPageChangeObservable(): Observable<any> {\r\n    return this.getPaginator().page;\r\n  }\r\n\r\n\r\n  private getPaginator(): MatPaginator {\r\n    return (this._cdkTable.dataSource as MatTableDataSource<any>).paginator;\r\n  }\r\n\r\n  private enablePaginator(value: boolean) {\r\n    if (this.getPaginator()) {\r\n      this.getPaginator().disabled = !value;\r\n      this.getPaginator()._changePageSize(this.getPaginator().pageSize);\r\n    }\r\n  }\r\n\r\n}\r\n","import { CdkTableExporterModule } from 'cdk-table-exporter';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatTableExporterDirective } from './mat-table-exporter.directive';\r\n\r\n\r\n@NgModule({\r\n  declarations: [MatTableExporterDirective],\r\n  imports: [\r\n    MatTableModule,\r\n    CdkTableExporterModule\r\n  ],\r\n  exports: [MatTableExporterDirective]\r\n})\r\nexport class MatTableExporterModule { }\r\n","\n/*\n * Public API Surface of mat-table-exporter\n */\n\nexport * from './lib/mat-table-exporter.module';\nexport { MatTableExporterDirective } from './lib/mat-table-exporter.directive';\nexport * from 'cdk-table-exporter';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;IAU+C,6CAAgB;IAa7D,mCACE,QAAmB,EACnB,cAAqC,EACrC,aAAmC,EACP,KAAoB;eAEhD,kBAAM,QAAQ,EAAE,cAAc,EAAE,aAAa,EAAE,KAAK,CAAC;KACtD;;;;IAhBD,mDAAe,GAAf;QAAA,iBAOC;QANC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC;YAC5B,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,UAAA,CAAC;YAC9B,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC5B,CAAC,CAAC;KACJ;;;;IAcM,gDAAY,GAAnB;QACE,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,gBAAgB,EAAE,CAAC;KAC/C;;;;IAKM,uDAAmB,GAA1B;QACE,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC;KACtC;;;;IAKM,4CAAQ,GAAf,UAAgB,KAAa;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;KACnE;;;;IAKM,2DAAuB,GAA9B;QACE,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC;KACjC;IAGO,gDAAY,GAApB;QACE,OAAQ,IAAI,CAAC,SAAS,CAAC,UAAsC,CAAC,SAAS,CAAC;KACzE;IAEO,mDAAe,GAAvB,UAAwB,KAAc;QACpC,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;YACvB,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC;YACtC,IAAI,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;SACnE;KACF;;gBA/CW,SAAS;gBACH,qBAAqB;gBACtB,oBAAoB;gBACA,QAAQ,uBAA1C,IAAI,YAAI,IAAI,YAAI,QAAQ;;IAjBhB,yBAAyB;QAJrC,SAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,QAAQ,EAAE,kBAAkB;SAC7B,CAAC;QAkBG,WAAA,IAAI,EAAE,CAAA,EAAE,WAAA,IAAI,EAAE,CAAA,EAAE,WAAA,QAAQ,EAAE,CAAA;yCAHjB,SAAS;YACH,qBAAqB;YACtB,oBAAoB;YACA,QAAQ;OAjBlC,yBAAyB,CA+DrC;IAAD,gCAAC;CAAA,CA/D8C,gBAAgB;;;ICI/D;KAAuC;IAA1B,sBAAsB;QARlC,QAAQ,CAAC;YACR,YAAY,EAAE,CAAC,yBAAyB,CAAC;YACzC,OAAO,EAAE;gBACP,cAAc;gBACd,sBAAsB;aACvB;YACD,OAAO,EAAE,CAAC,yBAAyB,CAAC;SACrC,CAAC;OACW,sBAAsB,CAAI;IAAD,6BAAC;CAAvC;;ACbA;;GAEG;;ACHH;;GAEG;;;;"}