import { __decorate, __param, __metadata } from 'tslib';
import { CdkTableExporter, ServiceLocatorService, DataExtractorService, CdkTableExporterModule } from 'cdk-table-exporter';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'cdk-table-exporter';
import * as ɵngcc2 from '@angular/material/table';
export * from 'cdk-table-exporter';
import { MatTable, MatTableModule } from '@angular/material/table';
import { Renderer2, Host, Self, Optional, Directive, NgModule } from '@angular/core';

let MatTableExporterDirective = class MatTableExporterDirective extends CdkTableExporter {
    constructor(renderer, serviceLocator, dataExtractor, table) {
        super(renderer, serviceLocator, dataExtractor, table);
    }
    /**
     * Overriding ngAfterViewInit of TableExporter
     */
    ngAfterViewInit() {
        this.exportStarted.subscribe(_ => {
            this.enablePaginator(false);
        });
        this.exportCompleted.subscribe(_ => {
            this.enablePaginator(true);
        });
    }
    /**
     * MatTable implementation of getPageCount
     */
    getPageCount() {
        return this.getPaginator().getNumberOfPages();
    }
    /**
     * MatTable implementation of getCurrentPageIndex
     */
    getCurrentPageIndex() {
        return this.getPaginator().pageIndex;
    }
    /**
     * MatTable implementation of goToPage
     */
    goToPage(index) {
        this.getPaginator().pageIndex = index;
        this.getPaginator()._changePageSize(this.getPaginator().pageSize);
    }
    /**
     * MatTable implementation of getPageChangeObservable
     */
    getPageChangeObservable() {
        return this.getPaginator().page;
    }
    getPaginator() {
        return this._cdkTable.dataSource.paginator;
    }
    enablePaginator(value) {
        if (this.getPaginator()) {
            this.getPaginator().disabled = !value;
            this.getPaginator()._changePageSize(this.getPaginator().pageSize);
        }
    }
};
MatTableExporterDirective.ɵfac = function MatTableExporterDirective_Factory(t) { return new (t || MatTableExporterDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ServiceLocatorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataExtractorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MatTable, 11)); };
MatTableExporterDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTableExporterDirective, selectors: [["", "matTableExporter", ""]], exportAs: ["matTableExporter"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
MatTableExporterDirective.ctorParameters = () => [
    { type: Renderer2 },
    { type: ServiceLocatorService },
    { type: DataExtractorService },
    { type: MatTable, decorators: [{ type: Host }, { type: Self }, { type: Optional }] }
];
MatTableExporterDirective = __decorate([ __param(3, Host()), __param(3, Self()), __param(3, Optional()),
    __metadata("design:paramtypes", [Renderer2,
        ServiceLocatorService,
        DataExtractorService,
        MatTable])
], MatTableExporterDirective);

let MatTableExporterModule = class MatTableExporterModule {
};
MatTableExporterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableExporterModule });
MatTableExporterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableExporterModule_Factory(t) { return new (t || MatTableExporterModule)(); }, imports: [[
            MatTableModule,
            CdkTableExporterModule
        ]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableExporterDirective, [{
        type: Directive,
        args: [{
                selector: '[matTableExporter]',
                exportAs: 'matTableExporter'
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc1.ServiceLocatorService }, { type: ɵngcc1.DataExtractorService }, { type: ɵngcc2.MatTable, decorators: [{
                type: Host
            }, {
                type: Self
            }, {
                type: Optional
            }] }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableExporterModule, { declarations: function () { return [MatTableExporterDirective]; }, imports: function () { return [MatTableModule,
        CdkTableExporterModule]; }, exports: function () { return [MatTableExporterDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableExporterModule, [{
        type: NgModule,
        args: [{
                declarations: [MatTableExporterDirective],
                imports: [
                    MatTableModule,
                    CdkTableExporterModule
                ],
                exports: [MatTableExporterDirective]
            }]
    }], null, null); })();

/*
 * Public API Surface of mat-table-exporter
 */

/**
 * Generated bundle index. Do not edit.
 */

export { MatTableExporterDirective, MatTableExporterModule };

//# sourceMappingURL=mat-table-exporter.js.map